# Generated by Django 2.1.7 on 2019-07-15 16:23

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CronHandle',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_json', django.contrib.postgres.fields.jsonb.JSONField()),
                ('ishandling', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_device_type', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modified_device_type', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Humidity',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.DecimalField(decimal_places=0, default=0, max_digits=9)),
                ('created_date', models.DateTimeField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Humidities',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_sensor', to=settings.AUTH_USER_MODEL)),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.DeviceType')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modified_sensor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.DecimalField(decimal_places=0, default=0, max_digits=9)),
                ('created_date', models.DateTimeField()),
                ('timestamp', models.IntegerField()),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temperature_sensor', to='iot.Sensor')),
            ],
        ),
        migrations.AddField(
            model_name='humidity',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='humidity_sensor', to='iot.Sensor'),
        ),
        migrations.AddField(
            model_name='cronhandle',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cron_handle_sensor', to='iot.Sensor'),
        ),
        migrations.AlterUniqueTogether(
            name='temperature',
            unique_together={('sensor', 'timestamp')},
        ),
        migrations.AlterIndexTogether(
            name='temperature',
            index_together={('sensor', 'timestamp')},
        ),
        migrations.AlterUniqueTogether(
            name='humidity',
            unique_together={('sensor', 'timestamp')},
        ),
        migrations.AlterIndexTogether(
            name='humidity',
            index_together={('sensor', 'timestamp')},
        ),
        migrations.AlterUniqueTogether(
            name='devicetype',
            unique_together={('name',)},
        ),
        migrations.AlterIndexTogether(
            name='cronhandle',
            index_together={('created_date',)},
        ),
    ]
